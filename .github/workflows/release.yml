name: Create release

on:
  push:
    tags:
      - 'v*'

jobs:
  generate:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7.x

      - name: Cache Gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: Install Gems
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Test
        env:
          MA_ENDPOINT: ${{ secrets.MA_ENDPOINT }}
          MA_ENDPOINT_USER: ${{ secrets.MA_ENDPOINT_USER }}
          MA_ENDPOINT_PASSWORD: ${{ secrets.MA_ENDPOINT_PASSWORD }}
          WEBMOCK_ALLOW_HOST: ${{ secrets.WEBMOCK_ALLOW_HOST }}
        run: bundle exec rspec --profile 10 --format progress

      - name: Lint
        run: bundle exec rubocop --parallel --display-cop-names

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Publish to Registry
        uses: jstastny/publish-gem-to-github@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: floriandejonckheere

      - name: Publish gem
        uses: dawidd6/action-publish-gem@v1
        with:
          api_key: ${{ secrets.RUBYGEMS_API_KEY }}

      - name: Create Release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            Gem is available as: ${{ github.event.repository.name }}-${{ steps.get_version.outputs.VERSION }}
            Created by Github Actions
